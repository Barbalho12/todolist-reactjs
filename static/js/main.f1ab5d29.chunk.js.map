{"version":3,"sources":["components/Sidebar/styles.js","API.js","components/FormDialogBlock/index.js","components/Sidebar/index.js","components/UserInfo/index.js","pages/Main/styles.js","components/CreateTaskForm/index.js","components/BottomBar/index.js","components/TaskItem/index.js","components/TaskList/index.js","components/AsyncService/index.js","components/TodoList/index.js","pages/Main/index.js","routes/index.js","styles/index.js","Home.js","App.js","index.js"],"names":["Container","styled","aside","SidebarLink","NavLink","PATH_BASE","PATH","API","findAll","a","url","fetch","response","findAllCompleteds","findAllLefts","setCompleted","id","isCompleted","method","create","taskDescription","block","headers","body","JSON","stringify","description","delete","update","task","getUserByEmail","email","getBlocksByUserEmail","findAllByBlock","findAllCompletedsByBlock","findAllLeftsByBlock","createBlock","userEmail","nameBlock","webSocketURL","useStyles","makeStyles","theme","bottom","marginTop","padding","FormDialogBlock","user","setBlocks","React","useState","open","setOpen","setNameBlock","classes","handleClose","Button","className","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","e","target","DialogActions","event","preventDefault","then","json","blocks","newBlocks","list","Sidebar","map","key","to","name","topRigth","position","right","top","display","justifyItems","alignItems","LogutButton","localStorage","removeItem","window","location","reload","btlogout","UserInfo","div","h1","button","margin","width","inputtext","CreateTaskForm","createTask","newTaskDescription","setNewTaskDescription","handleSubmit","onSubmit","noValidate","autoComplete","variant","root","maxWidth","justifyContent","backgroundColor","palette","background","paper","BottomBar","pageValue","onPageChange","BottomNavigation","showLabels","BottomNavigationAction","icon","TaskItem","deleteAction","checkAction","ListItem","role","undefined","dense","ListItemIcon","Checkbox","edge","checked","completed","tabIndex","disableRipple","ListItemText","primary","IconButton","aria-label","maxHeight","overflow","TaskList","listItens","List","AsyncService","onReceive","topics","onMessage","msg","TodoList","setpageValue","setListItens","temppageValue","useEffect","newValue","container","flexDirection","title","main","Main","console","log","Card","Routes","path","render","props","exact","createGlobalStyle","Home","styles","center","textAlign","boxShadow","borderRadius","submitButton","height","fontWeight","fontSize","border","username","marginBottom","App","setUser","getItem","style","elements","setItem","placeholder","required","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f1ab5d29.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.aside`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  width: 200px;\n  height: 100%;\n  background-color: #252526;\n  flex-direction: column;\n  transition: all 0.2s ease 0s;\n  &:hover {\n    width: 240px;\n  }\n`;\n\nexport const SidebarLink = styled(NavLink)`\n  width: 100%;\n  text-align: center;\n  text-decoration: none;\n  padding-top: 10px;\n  color: #eee;\n  &:hover {\n    color: #f50057;\n  }\n`; ","\n// const PATH_BASE = \"http://localhost:8080\";\nconst PATH_BASE = `https://staging-todolist.herokuapp.com`;\n\nconst PATH = `${PATH_BASE}/tasks`;\n\nconst API = {\n    findAll: async () => {\n        const url = `${PATH}`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    findAllCompleteds : async () => {\n        const url = `${PATH}/completeds`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    findAllLefts : async () => {\n        const url = `${PATH}/lefts`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    setCompleted : async (id, isCompleted) => {\n        const url = `${PATH}/${id}/set-completed/${isCompleted}`;\n        const response = await fetch(url, {method:'PUT'});\n        return response;\n    },\n\n    create : async (taskDescription, block) => {\n        const url = `${PATH}`;\n\n        const response = await fetch(url, {\n            method:'POST',  \n            headers:{\n                \"Content-Type\":\"application/json\"\n            }, \n            body:JSON.stringify({description:taskDescription, block:{id:block.id}})\n        });\n        return response;\n    },\n\n    delete : async (id) => {\n        const url = `${PATH}/${id}`;\n        const response = await fetch(url, {method:'DELETE'});\n        return response;\n    },\n\n    update : async (id, task) => {\n        const url = `${PATH}/${id}`;\n        const response = await fetch(url, {\n            method:'PUT',  \n            headers:{\n                \"Content-Type\":\"application/json\"\n            }, \n            body:JSON.stringify(task)\n        });\n        return response;\n    },\n\n    getUserByEmail: async (email) => {\n        const url = `${PATH_BASE}/users/by-email/${email}`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    getBlocksByUserEmail: async (email) => {\n        const url = `${PATH_BASE}/blocks`;\n        const response = await fetch(url, {\n            method:'GET',  \n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"user\":email\n            }\n        });\n        return response;\n    },\n\n    findAllByBlock: async (block) => {\n        const url = `${PATH}`;\n        const response = await fetch(url, {\n            method:'GET',  \n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"block\":block.id\n            }\n        });\n        return response;\n    },\n\n    findAllCompletedsByBlock : async (block) => {\n        const url = `${PATH}/completeds`;\n        const response = await fetch(url, {\n            method:'GET',  \n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"block\":block.id\n            }\n        });\n        return response;\n    },\n\n    findAllLeftsByBlock : async (block) => {\n        const url = `${PATH}/lefts`;\n        const response = await fetch(url, {\n            method:'GET',  \n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"block\":block.id\n            }\n        });\n        return response;\n    },\n\n    createBlock: async (userEmail, nameBlock) => {\n        const url = `${PATH_BASE}/blocks/${nameBlock}`;\n        const response = await fetch(url, {\n            method:'POST',  \n            headers:{\n                \"user\":userEmail\n            }\n        });\n        return response;\n    },\n\n\n    webSocketURL:`${PATH_BASE}/subscribe`\n}\n\nexport default API;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport API from '../../API';\n\nconst useStyles = makeStyles((theme) => ({\n  bottom: {\n    marginTop: \"40px\",\n    padding: \"10px\"\n  }\n}));\n\n\nfunction FormDialogBlock({user, setBlocks}) {\n  const [open, setOpen] = React.useState(false);\n  const [nameBlock, setNameBlock] = React.useState(\"\");\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addBlock = (event) => {\n    event.preventDefault();\n    API.createBlock(user.email, nameBlock).then(response => {\n      response.json().then( blocks => {\n\n        API.getBlocksByUserEmail(user.email).then(response => {\n          response.json().then( newBlocks => {\n            setBlocks(newBlocks);\n            setNameBlock(\"\");\n            handleClose();\n          });\n        });\n      });\n    });\n  }\n  return (\n    <div>\n      <Button className={classes.bottom}  color=\"primary\" onClick={handleClickOpen}>\n        <AddIcon/>\n        Novo bloco\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Adicionar novo bloco de tarefas</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            id=\"name\"\n            label=\"Novo bloco\"\n            type=\"text\"\n            fullWidth\n            value={nameBlock} \n            onChange={ (e) => { setNameBlock(e.target.value)} }\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={addBlock} color=\"primary\">\n            Adicionar\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n  export default FormDialogBlock;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, SidebarLink } from './styles';\n\nimport FormDialogBlock from '../FormDialogBlock';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    color: \"primary\",\n    marginTop: \"10px\"\n  }\n}));\n\nconst Sidebar = ({user, blocks, setBlocks}) => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <div className={classes.list}></div>\n        {blocks.map((block) => {\n            return (\n              <Button color=\"primary\">\n                <SidebarLink key={`${block.id}`} to={`/${block.name}`}>{block.name}</SidebarLink>\n              </Button>\n            );\n        })}\n        <FormDialogBlock user={user} setBlocks={setBlocks}/>\n    </Container>\n  );\n}\n\nexport default Sidebar; ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    topRigth:{\n        position:\"absolute\",\n        right:\"10px\",\n        top:\"10px\",\n        display:\"flex\",\n        justifyItems: \"center\",\n        alignItems: \"center\"\n    },\n    name:{\n        color:\"grey\",\n    }\n}));\n\nconst LogutButton = () => {\n    const classes = useStyles();\n\n    const handleLogout = () => {\n        localStorage.removeItem('@todo-app/username');\n        window.location.reload();\n    }\n\n\n    return (\n        <Button color=\"primary\" onClick={handleLogout} className={classes.btlogout}>SAIR</Button>\n    );\n    \n}\n\nconst UserInfo = ({user}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.topRigth}>\n            <p className={classes.name}>{user.email}</p>\n            <LogutButton />\n        </div>\n    );\n    \n}\n\nexport default UserInfo;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Title = styled.h1`\n  color: #009cde;\n`;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    button:{\n      margin: \"10px\",\n      width:\"90%\"\n    },\n    inputtext: {\n      margin: \"10px\",\n      width: \"90%\"\n    }\n}));\n\nconst CreateTaskForm = ({createTask}) => {\n    const [newTaskDescription, setNewTaskDescription] = React.useState(\"\");\n    const classes = useStyles();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        createTask(newTaskDescription);\n        setNewTaskDescription(\"\");\n    }\n\n    return (\n        <form className={classes.inputtext} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <TextField id=\"standard-basic\" value={newTaskDescription} label=\"Nova tarefa\" onChange={ (e) => { setNewTaskDescription(e.target.value)} } className={classes.inputtext} />\n        <Button variant=\"contained\" onClick={handleSubmit} color=\"primary\" className={classes.button}>ADICIONAR</Button>\n        </form>\n    );\n}\n\nexport default CreateTaskForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        justifyContent: \"center\",\n        backgroundColor: theme.palette.background.paper,\n        padding:'10px'\n    }\n}));\n\nconst BottomBar = ({pageValue, onPageChange}) => {\n    const classes = useStyles();\n    return (\n        <BottomNavigation\n            value={pageValue}\n            onChange={onPageChange} \n            showLabels className={classes.root}>\n          <BottomNavigationAction label=\"Todas\"  value={0} icon={<FormatListBulletedIcon />} />\n          <BottomNavigationAction label=\"Pendentes\" value={1}  icon={<QueryBuilderIcon />} />\n          <BottomNavigationAction label=\"Concluídas\" value={2}  icon={<DoneAllIcon />} />\n        </BottomNavigation>\n    );\n}\n\nexport default BottomBar;","import React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst TaskItem = ({task, deleteAction, checkAction}) => {\n  return (\n      <ListItem role={undefined} dense button onClick={checkAction(task)}>\n        <ListItemIcon>\n          <Checkbox\n            edge=\"start\"\n            checked={task.completed}\n            tabIndex={task.id}\n            disableRipple\n          />\n        </ListItemIcon>\n        <ListItemText id={`checkbox-description-${task.id}`} primary={task.description} />\n          <IconButton edge=\"end\" color=\"secondary\" aria-label=\"clear\" onClick={() => {deleteAction(task.id)} } >\n            <ClearIcon />\n          </IconButton>\n      </ListItem>\n  );\n}\n\nexport default TaskItem;","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport TaskItem from '../../components/TaskItem';\n\nconst useStyles = makeStyles((theme) => ({\n    list:{\n      maxHeight: 300, \n      overflow: 'auto',\n      width: '100%',\n      maxWidth: 360,\n      justifyContent: \"center\",\n      backgroundColor: theme.palette.background.paper,\n      padding:'10px'\n    }\n}));\n\nconst TaskList = ({listItens, deleteAction, checkAction}) => {\n    const classes = useStyles();\n    return (\n        <List className={classes.list}>\n            {listItens.map((task) => {\n                return (\n                    <TaskItem task={task} key={`${task.id}`} deleteAction={deleteAction} checkAction={checkAction}/>\n                );\n            })}\n        </List>\n    );\n}\n\nexport default TaskList;","import React from 'react';\nimport SockJsClient from 'react-stomp';\nimport API from '../../API';\n\nconst AsyncService = ({onReceive}) => {\n    return (\n      <SockJsClient url={API.webSocketURL} topics={['/topic/tasks']}\n      onMessage={(msg) => { onReceive(); }} />\n    );\n}\n\nexport default AsyncService;","import React, {useEffect} from 'react';\n\nimport API from '../../API';\n\nimport CreateTaskForm from '../../components/CreateTaskForm';\nimport BottomBar from '../../components/BottomBar';\nimport TaskList from '../../components/TaskList';\nimport AsyncService from '../../components/AsyncService';\n\nconst TodoList = ({block}) => {\n    const [pageValue, setpageValue] = React.useState(0);\n    const [listItens, setListItens] = React.useState([]);\n    \n    let temppageValue = 0;\n  \n    const update = () =>{\n      if(temppageValue === 0){\n        API.findAllByBlock(block).then(response => {\n          response.json().then( list => {\n            setListItens(list);\n          });\n        });\n      } else if(temppageValue === 1){\n        API.findAllLeftsByBlock(block).then(response => {\n          response.json().then( list => {\n            setListItens(list);\n          });\n        });\n      } else if(temppageValue === 2){\n        API.findAllCompletedsByBlock(block).then(response => {\n          response.json().then( list => {\n            setListItens(list);\n          });\n        });\n      }\n    }\n  \n    useEffect(() => {\n      update();\n    }, [])\n  \n    const checkAction = (task) => () => {\n      task.completed = !task.completed;\n      API.setCompleted(task.id, task.completed).then(response => {\n        update();\n      })\n    };\n  \n    const createTask = (newTaskDescription) => {\n      API.create(newTaskDescription, block).then( response => {\n        update();\n      });\n    }\n  \n    const onPageChange = (event, newValue) => {\n      setpageValue(newValue);\n      temppageValue = newValue;\n      update();\n    }\n  \n    const deleteAction = (id) => {\n      API.delete(id).then( response => {\n        update();\n      });\n    }\n  \n    return (\n      <div>\n          <CreateTaskForm createTask={createTask} />\n          <TaskList listItens={listItens} deleteAction={deleteAction} checkAction={checkAction} />\n          <AsyncService onReceive={update}/>\n          <BottomBar pageValue={pageValue} onPageChange={onPageChange}/>\n        </div>\n    );\n}\n\nexport default TodoList;","import React, {useEffect} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from './styles';\n\nimport Card from '@material-ui/core/Card';\nimport TodoList from '../../components/TodoList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    padding:'10px'\n  },\n  container: {\n    flexDirection: 'column',\n\n  },\n  title: {\n    margin:\"20px\",\n    color: theme.palette.primary.main,\n  }\n}));\n\nconst Main = ({block}) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(block);\n  }, []);\n\n\n  return (\n    <Container className={classes.container}>\n      <h1 className={classes.title}>{block.name}</h1>\n      <Card className={classes.root}>\n        <TodoList block={block}/>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Main;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Main from '../pages/Main';\n\nimport FormDialogBlock from '../components/FormDialogBlock';\n\nconst Routes = ({user, blocks}) => {\n\n  return (\n    <Switch>\n       {blocks.map((block) => {\n            return (\n              <Route key={`${block.id}`} path={`/${block.name}`} render={(props) => <Main block={block} /> } />\n            );\n        })}\n      <Route path=\"/new\" exact render={(props) => <FormDialogBlock user={user} blocks={blocks} />} />\n    </Switch>\n  );\n}\n\nexport default Routes;","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default createGlobalStyle`\n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      outline: 0;\n    }\n    html,\n    body,\n    #root {\n      height: 100%;\n    }\n    body {\n      text-rendering: optimizeLegibility !important;\n      font-family: sans-serif;\n      -webkit-font-smoothing: antialiased;\n      background: #eee;\n    }\n`;","import React, {useEffect} from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Sidebar from './components/Sidebar';\nimport UserInfo from './components/UserInfo';\nimport Routes from './routes';\n\nimport API from './API';\n\nimport GlobalStyle, { Container } from './styles';\n\nfunction Home({user}) {\n\n  const [blocks, setBlocks] = React.useState([]);\n\n  useEffect(() => {\n      API.getBlocksByUserEmail(user.email).then(response => {\n        response.json().then( blocks => {\n          console.log(blocks);\n          setBlocks(blocks);\n        });\n      });\n  }, []);\n\n  return (\n\n    <BrowserRouter>\n      <GlobalStyle />\n      <Container>\n        <Sidebar user={user} blocks={blocks} setBlocks={setBlocks}/>\n        <Routes user={user} blocks={blocks}/>\n        <UserInfo user={user}/>\n      </Container>\n    </BrowserRouter>\n  );\n\n}\n\nexport default Home;","import React, { useEffect } from 'react';\n\nimport Home from './Home';\n\nimport API from './API';\n\nconst App = () => {\n  const [user, setUser] = React.useState(null);\n\n\n  useEffect(() => {\n    const email = localStorage.getItem('@todo-app/username');\n    if (email != null) {\n      API.getUserByEmail(email).then(response => {\n        response.json().then( user => {\n          setUser(user);\n        });\n      });\n    }\n  }, []);\n  \n  const handleSubmit = (e) => {\n    e.preventDefault(); \n    const email = e.target.elements.username.value;\n    API.getUserByEmail(email).then(response => {\n      console.log(response);\n      response.json().then( user => {\n        setUser(user);\n        localStorage.setItem('@todo-app/username', user.email);\n      });\n    });\n  };\n\n  if (user !== null) {\n    return (\n      <Home user={user}/>\n    );\n  } else {\n    return (\n      <div style={styles.center}>\n        <form style={styles.container} onSubmit={handleSubmit}>\n          <input style={styles.username} type=\"text\" name=\"username\" placeholder=\"Email do usuário\" required />\n          <button type=\"submit\" style={styles.submitButton}>Entrar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  center:{\n    width: '100%',\n    display: 'flex',\n    justifyContent: \"center\"\n  },\n  container: {\n    display: 'flex',\n    textAlign: 'center',\n    flexDirection: 'column',\n  \n    width: 400,\n    justifyContent: \"center\",\n    boxShadow: 'rgba(0, 0, 0, 0.1) 0px 0px 20px',\n    background: 'rgb(255, 255, 255)',\n    borderRadius: '4px',\n    padding: '30px 20px'\n  },\n  submitButton: {\n    height: '40px',\n    textAlign: 'center',\n    alignItems: 'center',\n    borderRadius: '4px',\n    fontWeight: 'bold',\n    fontSize: '14px',\n    border: 0,\n    color: '#fff',\n    background: '#009587',\n    marginTop: '5px',\n  },\n  username: {\n    height: '40px',\n    padding: '0 15px',\n    border: '1px solid #eee',\n    borderRadius: '4px',\n    marginBottom: '10px',\n    color: '#444'\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}