{"version":3,"sources":["styles/index.js","pages/Main/styles.js","API.js","components/CreateTaskForm/index.js","components/BottomBar/index.js","components/TaskItem/index.js","components/TaskList/index.js","components/AsyncService/index.js","components/TodoList/index.js","pages/Main/index.js","App.js","index.js"],"names":["Container","styled","div","createGlobalStyle","h1","PATH_BASE","PATH","API","findAll","a","url","fetch","response","findAllCompleteds","findAllLefts","setCompleted","id","isCompleted","method","create","taskDescription","headers","body","JSON","stringify","delete","update","task","webSocketURL","useStyles","makeStyles","theme","button","margin","width","inputtext","CreateTaskForm","createTask","React","useState","newTaskDescription","setNewTaskDescription","classes","handleSubmit","event","preventDefault","className","onSubmit","noValidate","autoComplete","TextField","value","label","onChange","e","target","Button","variant","onClick","color","root","maxWidth","justifyContent","backgroundColor","palette","background","paper","padding","BottomBar","pageValue","onPageChange","BottomNavigation","showLabels","BottomNavigationAction","icon","TaskItem","deleteAction","checkAction","ListItem","role","undefined","dense","ListItemIcon","Checkbox","edge","checked","completed","tabIndex","disableRipple","ListItemText","primary","description","IconButton","aria-label","list","maxHeight","overflow","TaskList","listItens","List","map","key","AsyncService","onReceive","topics","onMessage","msg","TodoList","setpageValue","setListItens","temppageValue","then","json","useEffect","newValue","container","flexDirection","title","main","Main","Card","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae8c8454.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default createGlobalStyle`\n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      outline: 0;\n    }\n    html,\n    body,\n    #root {\n      height: 100%;\n    }\n    body {\n      text-rendering: optimizeLegibility !important;\n      font-family: sans-serif;\n      -webkit-font-smoothing: antialiased;\n      background: #eee;\n    }\n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Title = styled.h1`\n  color: #009cde;\n`;","\n// const PATH_BASE = \"http://localhost:8080\";\nconst PATH_BASE = `https://staging-todolist.herokuapp.com`;\n\nconst PATH = `${PATH_BASE}/tasks`;\n\nconst API = {\n    findAll: async () => {\n        const url = `${PATH}`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    findAllCompleteds : async () => {\n        const url = `${PATH}/completeds`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    findAllLefts : async () => {\n        const url = `${PATH}/lefts`;\n        const response = await fetch(url);\n        return response;\n    },\n\n    setCompleted : async (id, isCompleted) => {\n        const url = `${PATH}/${id}/set-completed/${isCompleted}`;\n        const response = await fetch(url, {method:'PUT'});\n        return response;\n    },\n\n    create : async (taskDescription) => {\n        const url = `${PATH}`;\n        const response = await fetch(url, {\n            method:'POST',  \n            headers:{\n                \"Content-Type\":\"application/json\"\n            }, \n            body:JSON.stringify(taskDescription)\n        });\n        return response;\n    },\n\n    delete : async (id) => {\n        const url = `${PATH}/${id}`;\n        const response = await fetch(url, {method:'DELETE'});\n        return response;\n    },\n\n    update : async (id, task) => {\n        const url = `${PATH}/${id}`;\n        const response = await fetch(url, {\n            method:'PUT',  \n            headers:{\n                \"Content-Type\":\"application/json\"\n            }, \n            body:JSON.stringify(task)\n        });\n        return response;\n    },\n\n    webSocketURL:`${PATH_BASE}/subscribe`\n}\n\nexport default API;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    button:{\n      margin: \"10px\",\n      width:\"90%\"\n    },\n    inputtext: {\n      margin: \"10px\",\n      width: \"90%\"\n    }\n}));\n\nconst CreateTaskForm = ({createTask}) => {\n    const [newTaskDescription, setNewTaskDescription] = React.useState(\"\");\n    const classes = useStyles();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        createTask(newTaskDescription);\n        setNewTaskDescription(\"\");\n    }\n\n    return (\n        <form className={classes.inputtext} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <TextField id=\"standard-basic\" value={newTaskDescription} label=\"Nova tarefa\" onChange={ (e) => { setNewTaskDescription(e.target.value)} } className={classes.inputtext} />\n        <Button variant=\"contained\" onClick={handleSubmit} color=\"primary\" className={classes.button}>ADICIONAR</Button>\n        </form>\n    );\n}\n\nexport default CreateTaskForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        justifyContent: \"center\",\n        backgroundColor: theme.palette.background.paper,\n        padding:'10px'\n    }\n}));\n\nconst BottomBar = ({pageValue, onPageChange}) => {\n    const classes = useStyles();\n    return (\n        <BottomNavigation\n            value={pageValue}\n            onChange={onPageChange} \n            showLabels className={classes.root}>\n          <BottomNavigationAction label=\"Todas\"  value={0} icon={<FormatListBulletedIcon />} />\n          <BottomNavigationAction label=\"Pendentes\" value={1}  icon={<QueryBuilderIcon />} />\n          <BottomNavigationAction label=\"Concluídas\" value={2}  icon={<DoneAllIcon />} />\n        </BottomNavigation>\n    );\n}\n\nexport default BottomBar;","import React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst TaskItem = ({task, deleteAction, checkAction}) => {\n  return (\n      <ListItem role={undefined} dense button onClick={checkAction(task)}>\n        <ListItemIcon>\n          <Checkbox\n            edge=\"start\"\n            checked={task.completed}\n            tabIndex={task.id}\n            disableRipple\n          />\n        </ListItemIcon>\n        <ListItemText id={`checkbox-description-${task.id}`} primary={task.description} />\n          <IconButton edge=\"end\" color=\"secondary\" aria-label=\"clear\" onClick={() => {deleteAction(task.id)} } >\n            <ClearIcon />\n          </IconButton>\n      </ListItem>\n  );\n}\n\nexport default TaskItem;","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport TaskItem from '../../components/TaskItem';\n\nconst useStyles = makeStyles((theme) => ({\n    list:{\n      maxHeight: 300, \n      overflow: 'auto',\n      width: '100%',\n      maxWidth: 360,\n      justifyContent: \"center\",\n      backgroundColor: theme.palette.background.paper,\n      padding:'10px'\n    }\n}));\n\nconst TaskList = ({listItens, deleteAction, checkAction}) => {\n    const classes = useStyles();\n    return (\n        <List className={classes.list}>\n            {listItens.map((task) => {\n                return (\n                    <TaskItem task={task} key={`${task.id}`} deleteAction={deleteAction} checkAction={checkAction}/>\n                );\n            })}\n        </List>\n    );\n}\n\nexport default TaskList;","import React from 'react';\nimport SockJsClient from 'react-stomp';\nimport API from '../../API';\n\nconst AsyncService = ({onReceive}) => {\n    return (\n      <SockJsClient url={API.webSocketURL} topics={['/topic/tasks']}\n      onMessage={(msg) => { onReceive(); }} />\n    );\n}\n\nexport default AsyncService;","import React, {useEffect} from 'react';\n\nimport API from '../../API';\n\nimport CreateTaskForm from '../../components/CreateTaskForm';\nimport BottomBar from '../../components/BottomBar';\nimport TaskList from '../../components/TaskList';\nimport AsyncService from '../../components/AsyncService';\n\nconst TodoList = () => {\n    const [pageValue, setpageValue] = React.useState(0);\n    const [listItens, setListItens] = React.useState([]);\n    \n    let temppageValue = 0;\n  \n    const update = () =>{\n      if(temppageValue === 0){\n        API.findAll().then(response => {\n          response.json().then( list => {\n            setListItens(list);\n          });\n        });\n      } else if(temppageValue === 1){\n        API.findAllLefts().then(response => {\n          response.json().then( list => {\n            setListItens(list);\n          });\n        });\n      } else if(temppageValue === 2){\n        API.findAllCompleteds().then(response => {\n          response.json().then( list => {\n            setListItens(list);\n          });\n        });\n      }\n    }\n  \n    useEffect(() => {\n      update();\n    }, [])\n  \n    const checkAction = (task) => () => {\n      task.completed = !task.completed;\n      API.setCompleted(task.id, task.completed).then(response => {\n        update();\n      })\n    };\n  \n    const createTask = (newTaskDescription) => {\n      API.create(newTaskDescription).then( response => {\n        update();\n      });\n    }\n  \n    const onPageChange = (event, newValue) => {\n      setpageValue(newValue);\n      temppageValue = newValue;\n      update();\n    }\n  \n    const deleteAction = (id) => {\n      API.delete(id).then( response => {\n        update();\n      });\n    }\n  \n    return (\n      <div>\n          <CreateTaskForm createTask={createTask} />\n          <TaskList listItens={listItens} deleteAction={deleteAction} checkAction={checkAction} />\n          <AsyncService onReceive={update}/>\n          <BottomBar pageValue={pageValue} onPageChange={onPageChange}/>\n        </div>\n    );\n}\n\nexport default TodoList;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from './styles';\n\nimport Card from '@material-ui/core/Card';\nimport TodoList from '../../components/TodoList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    padding:'10px'\n  },\n  container: {\n    flexDirection: 'column',\n\n  },\n  title: {\n    margin:\"20px\",\n    color: theme.palette.primary.main,\n  }\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <h1 className={classes.title}>TODO List</h1>\n      <Card className={classes.root}>\n        <TodoList/>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import Routes from './routes';\n\nimport GlobalStyle, { Container } from './styles';\n\nimport Main from './pages/Main';\n\nconst App = () =>  {\n  return (\n    <BrowserRouter>\n      <GlobalStyle />\n      <Container>\n        {/* <Routes /> */}\n        <Main />\n      </Container>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}